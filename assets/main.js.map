{"version":3,"file":"main.js","sources":["../src/templates.js","../src/render.js","../src/utilities.js","../src/state.js","../src/updateResults.js","../src/bind.js","../src/index.js"],"sourcesContent":["import state from './state';\n\nexport default class templates {\n\n    static searchText(children) {\n        const currentState = state.getState();\n        const query = currentState.query;\n        const count = currentState.count;\n        const filter = currentState.filter.id;\n        const filterName = currentState.filter.name;\n\n        function wrapInContainer(children) {\n            return (\n                `<div class=\"border-bottom--iron-md border-bottom--iron-lg\">\n                <h2 class=\"search-text margin-top--2 margin-bottom--2\">\n                    ${children}\n                </h2>\n            </div>`\n            )\n        }\n\n        if (children) {\n            return wrapInContainer(children)\n        }\n\n        if (query && count === 0) {\n            return wrapInContainer(`No results for <strong>'${currentState.query}'</strong>`);\n        }\n\n        if (!query) {\n            return wrapInContainer(`No search query, showing all <strong>'${count}'</strong> results`);\n        }\n\n        if (query && filter) {\n            return wrapInContainer(`<strong>${count}</strong> results found for <strong>'${query}'</strong>, filtered by area type <strong>'${filterName}'</strong>`)\n        }\n\n        return wrapInContainer(`<strong>${count}</strong> results found for <strong>'${query}'</strong>`);\n    }\n\n    static areaSearchText() {\n        const currentState = state.getState();\n        const query = currentState.query;\n        const count = currentState.areaCount;\n\n        function wrapInContainer(children) {\n            return (\n                `<div class=\"col\">\n                <h2 class=\"search-text margin-top--2 margin-bottom--2\">\n                    ${children}\n                </h2>\n            </div>`\n            )\n        }\n\n        return wrapInContainer(`\n        Showing the top <strong>${(count > 4) ? `4` : count}</strong> suggested location${count > 1 ? `s` : ``}${query ? ` for <strong>'${query}'</strong>` : ''}.\n        <a href=\"\">View all</a>\n    `)\n    }\n\n    static datasetResultItem(data) {\n        return (\n            `<div class=\"result border-bottom--iron-md border-bottom--iron-lg\">\n            <h3 class=\"result__title\"><a href=\"\">${data.title}</a></h3>\n            <div class=\"result__description\">${data.description}</div>\n            <span class=\"result__metadata\">${data.type}</span>\n            <span class=\"result__metadata\">Released on ${data.releaseDate}</span>\n        </div>`\n        );\n    }\n\n    static areaResultItem(data) {\n        return (\n            `<div class=\"col col--lg-half background--iron-light margin-bottom--2 padding-top--2 padding-right--1 padding-bottom--2 padding-left--1 area-tile\">\n            <span class=\"baseline\">${data.type}</span>\n            <span class=\"icon icon-arrow-right--dark float-right margin-top--1\"></span>\n            <h3 class=\"flush\">\n                <a class=\"area-link\" href=\"/?q=${state.query}&filter=${data.type_id}\" data-filter=\"${data.type_id}\" data-filter-name=\"${data.type}\">\n                    ${data.title}\n                </a>\n            </h3>\n        </div>\n        `\n        );\n    }\n}\n","import state from './state';\nimport templates from './templates';\n\nconst appElem = document.getElementById('app');\nconst title = document.getElementById('title');\nconst typeahead = document.getElementById('typeahead');\n\nexport default class render {\n\n    static querySuggestions(suggestions) {\n        this.emptyQuerySuggestions();\n        if (!suggestions) {\n            return;\n        }\n        typeahead.innerHTML = '<ul class=\"typeahead__list\"><li class=\"typeahead__item\">' + suggestions.join('</li><li class=\"typeahead__item\">') + '</li></ul>';\n        typeahead.style.display = 'block';\n    }\n\n    static emptyQuerySuggestions() {\n        while (typeahead.firstChild) typeahead.removeChild(typeahead.firstChild);\n    }\n\n    static emptyResults() {\n        while (appElem.firstChild) appElem.removeChild(appElem.firstChild);\n    }\n\n    static allResults(areaResults, datasetResults) {\n        this.areaResults(areaResults);\n        this.datasetResults(datasetResults)\n    }\n\n    static allResultsForAreaType(resultsData) {\n        const HTMLParts = [];\n        const currentState = state.getState();\n        const searchText = `All <strong>'${currentState.count}'</strong> results, filtered by <strong>'${currentState.query}'</strong> as a <strong>'${currentState.filter.name}'</strong>`;\n\n        function wrapInContainer(children) {\n            return (\n                `<div class=\"col margin-bottom--3\">\n                ${templates.searchText(searchText)}\n                ${children}\n            </div>`\n            );\n        }\n\n        resultsData.map(result => {\n            let date = result.body.metadata.release_date.split('+');\n\n            // Check for invalid date\n            if (date[1]) {\n                date.pop();\n                date.push('Z');\n                date = date.join('');\n            }\n\n            const data = {\n                title: result.body.title,\n                description: result.body.metadata.description,\n                type: result.type,\n                releaseDate: new Date(date).toLocaleDateString('en-GB', { day: 'numeric', month: 'long', year: 'numeric' })\n            };\n\n            HTMLParts.push(templates.datasetResultItem(data));\n        });\n\n        appElem.innerHTML += wrapInContainer(HTMLParts.join(''));\n    }\n\n    static datasetResults(resultsData) {\n        const HTMLParts = [];\n        const count = state.getState().count;\n\n        if (count === 0) {\n            return wrapInContainer(``);\n        }\n\n        function wrapInContainer(children) {\n            return (\n                `<div class=\"col margin-bottom--3\">\n                ${templates.searchText()}\n                ${children}\n            </div>`\n            );\n        }\n\n        resultsData.map(result => {\n            let date = result.body.metadata.release_date.split('+');\n\n            // Check for invalid date\n            if (date[1]) {\n                date.pop();\n                date.push('Z');\n                date = date.join('');\n            }\n\n            const data = {\n                title: result.body.title,\n                description: result.body.metadata.description,\n                type: result.type,\n                releaseDate: new Date(date).toLocaleDateString('en-GB', { day: 'numeric', month: 'long', year: 'numeric' })\n            };\n\n            HTMLParts.push(templates.datasetResultItem(data));\n        });\n\n        appElem.innerHTML += wrapInContainer(HTMLParts.join(''));\n    }\n\n    static areaResults(resultsData) {\n        const HTMLParts = [];\n        const currentState = state.getState();\n        const count = currentState.areaCount;\n        const query = currentState.query;\n\n        if (count === 0 || !query) {\n            return ``;\n        }\n\n        function wrapInContainer(children) {\n            return (\n                `<div style=\"width: 100%;\" class=\"float-left border-bottom--iron-md border-bottom--iron-lg padding-bottom--2\">\n                ${templates.areaSearchText()}\n                ${children}\n            </div>`\n            )\n        }\n\n        resultsData.some((result, index) => {\n            const data = {\n                title: result.body.title,\n                type: result.body.type,\n                type_id: result.body.type_id\n            };\n\n            HTMLParts.push(templates.areaResultItem(data));\n\n            return index === 3;\n        });\n\n        appElem.innerHTML += wrapInContainer(HTMLParts.join(''));\n    }\n\n    static error() {\n        appElem.innerHTML += `\n            <div class=\"col\">\n                <h2>Oops, there's been an error</h2>\n                <p class=\"margin-top--2 margin-bottom--0\">There was an issue getting your results.</p>\n                <p class=\"flush\">Please try again in a few moments.</p>\n            </div>\n        `\n    }\n\n    static title(query) {\n        if (query) {\n            title.innerHTML = query + ` - Search - Office for National Statistics`;\n        } else {\n            title.innerHTML = `Search - Office for National Statistics`;\n        }\n    }\n}\n","import state from './state';\nimport render from './render';\n\nexport default class utilities {\n\n    static getEnvironmentType(hostname) {\n        switch (hostname) {\n            case 'localhost':\n            {\n                return `development`;\n            }\n            case '127.0.0.1':\n            {\n                return `development`;\n            }\n            default:\n            {\n                return `production`;\n            }\n        }\n    }\n\n    static getUrlParams() {\n        const queryString = location.search;\n        if (!queryString) {\n            return {};\n        }\n\n        let queries = queryString.split(/[\\&?]+/);\n        queries.splice(0, 1);\n\n        let returnValue = {};\n        queries.forEach(query => {\n            const splitQuery = query.split('=');\n            try {\n                splitQuery[1] = decodeURIComponent(splitQuery[1]);\n            } catch(e) {\n                console.error(e);\n            }\n\n            returnValue[splitQuery[0]] = splitQuery[1];\n        });\n\n        return returnValue;\n    }\n\n    static getSuggestions(query) {\n        return fetch(`${state.getState().apiUrl}/suggest?q=${query}`).then(response => response.json()).then(response => {\n            if (response.total_results === 0) {\n                typeahead.style.display = 'none';\n                render.emptyQuerySuggestions();\n                return;\n            }\n            return response.results.map(result => {\n                return result.body.title;\n            });\n        });\n    }\n}\n","import utilities from './utilities';\n\nlet currentState = {\n    count: 0,\n    areaCount: 0,\n    query: utilities.getUrlParams().q || ``,\n    filter: {\n        id: utilities.getUrlParams().filter || ``,\n        name: utilities.getUrlParams().filter || ``\n    },\n    apiUrl: \"https://search.discovery.onsdigital.co.uk\"\n};\n\nexport default class state {\n\n    static getState() {\n        return JSON.parse(JSON.stringify(currentState));\n    }\n\n    static updateState(action) {\n        const newState = this.getState();\n        switch (action.type) {\n            case ('UPDATE_COUNT'): {\n                newState.count = action.value;\n                break;\n            }\n            case ('UPDATE_AREA_COUNT'): {\n                newState.areaCount = action.value;\n                break;\n            }\n            case ('UPDATE_QUERY'): {\n                newState.query = action.value;\n                break;\n            }\n            case ('UPDATE_FILTER'): {\n                newState.filter = action.value;\n                break;\n            }\n        }\n\n        currentState = newState;\n    }\n\n}\n","import render from './render';\nimport state from './state';\nimport bind from './bind';\n\nconst inputElem = document.getElementById('search__input');\n\nexport default function updateResults() {\n\n    const currentState = state.getState();\n\n    // Fetch polyfill\n    if (!window.fetch) {\n        console.log('Using Fetch API polyfill');\n        const js = document.createElement('script');\n        js.src = 'https://cdnjs.cloudflare.com/ajax/libs/fetch/2.0.2/fetch.min.js';\n        js.onload = function() {\n            updateResults();\n        };\n        js.onerror = function() {\n            console.log('Error getting fetch API polyfill');\n        };\n        document.head.appendChild(js);\n        return;\n    }\n\n    if (currentState.query !== inputElem.value) {\n        console.log('Fetching results for \"%s\"', currentState.query);\n        inputElem.value = currentState.query;\n    }\n\n    render.title(currentState.query);\n\n    fetch(currentState.apiUrl + `/search?q=` + currentState.query + '&filter=' + currentState.filter.id).then(response => response.json()).then(response => {\n        state.updateState({\n            type: 'UPDATE_COUNT',\n            value: response.total_results\n        });\n        state.updateState({\n            type: 'UPDATE_AREA_COUNT',\n            value: response.area_results ? response.area_results.length : 0\n        });\n\n        render.emptyResults();\n\n        if (state.getState().filter.id && state.getState().count === 0) {\n            console.log(`Display all results for ${state.getState().filter.name}`);\n            fetch(`${state.getState().apiUrl}/search?filter=${state.getState().filter.id}`).then(response => response.json()).then(response => {\n                state.updateState({\n                    type: 'UPDATE_COUNT',\n                    value: response.total_results\n                });\n                state.updateState({\n                    type: 'UPDATE_AREA_COUNT',\n                    value: response.area_results ? response.area_results.length : 0\n                });\n                render.allResultsForAreaType(response.results);\n                bind.areaClick();\n                bind.areaHover();\n            });\n            return false;\n        }\n\n        if (state.getState().filter.id) {\n            render.datasetResults(response.results);\n            bind.areaClick();\n            bind.areaHover();\n            return false;\n        }\n\n        render.allResults(response.area_results, response.results);\n        bind.areaClick();\n        bind.areaHover();\n    }).catch(error => {\n        console.log(`Error getting results data \\n`, error);\n        render.emptyResults();\n        render.error();\n    });\n}\n","import state from './state';\nimport updateResults from './updateResults';\nimport render from './render';\nimport utilities from './utilities';\n\nconst inputElem = document.getElementById('search__input');\nconst searchElem = document.getElementById('search');\nconst typeahead = document.getElementById('typeahead');\n\nexport default class bind {\n\n    static areaClick() {\n        // Slightly hacky fix to make nodeList type an array, so that it is iterable in older versions of Chrome (see https://medium.com/@devlucky/nodelist-object-is-finally-an-iterator-cc529d6e2490 for the explanation)\n        const areaTiles = [].slice.call(document.querySelectorAll('.area-tile'));\n        const areaLinks = [].slice.call(document.querySelectorAll('.area-link'));\n\n        areaTiles.forEach(link => {\n            link.addEventListener('click', event => {\n                handleClick(event);\n            });\n        });\n\n        areaLinks.forEach(link => {\n            link.addEventListener('click', event => {\n                event.preventDefault();\n            });\n        });\n\n        function handleClick(event) {\n            const link = event.target.closest('.area-tile').querySelector('.area-link');\n\n            state.updateState({\n                type: 'UPDATE_FILTER',\n                value: {\n                    id: link.getAttribute('data-filter'),\n                    name: link.getAttribute('data-filter-name')\n                }\n            });\n            const currentState = state.getState();\n            window.history.pushState(state.getState(), ``, `?q=${currentState.query}&filter=${currentState.filter.id}`);\n            updateResults();\n        }\n    }\n\n    static areaHover() {\n        // Slightly hacky fix to make nodeList type an array, so that it is iterable in older versions of Chrome (see https://medium.com/@devlucky/nodelist-object-is-finally-an-iterator-cc529d6e2490 for the explanation)\n        const areaTiles = [].slice.call(document.querySelectorAll('.area-tile'));\n\n        areaTiles.forEach(tile => {\n            tile.addEventListener('mouseenter', event => {\n                handleHover(event);\n            });\n            tile.addEventListener('mouseleave', event => {\n                handleHoverLeave(event)\n            });\n        });\n\n        function handleHover(event) {\n            const tile = event.target.closest('.area-tile');\n            tile.style.cursor = \"pointer\";\n            addHighlight(tile);\n        }\n\n        function handleHoverLeave(event) {\n            const tile = event.target.closest('.area-tile');\n            tile.style.cursor = \"default\";\n            removeHighlight(tile);\n        }\n\n        function addHighlight(tileNode) {\n            tileNode.classList.remove('background--iron-light');\n            tileNode.classList.add('background--ship-grey', 'js-hover-click');\n\n            const icon = tileNode.querySelectorAll('.icon-arrow-right--dark')[0];\n            icon.classList.remove('icon-arrow-right--dark');\n            icon.classList.add('icon-arrow-right--light');\n        }\n\n        function removeHighlight(tileNode) {\n            tileNode.classList.remove('background--ship-grey', 'js-hover-click');\n            tileNode.classList.add('background--iron-light');\n\n            const icon = tileNode.querySelectorAll('.icon-arrow-right--light')[0];\n            icon.classList.remove('icon-arrow-right--light');\n            icon.classList.add('icon-arrow-right--dark');\n        }\n    }\n\n    static typeaheadKeys() {\n        searchElem.addEventListener('keydown', (event) => {\n            const keyCode = event.keyCode;\n            const upKey = 38;\n            const downKey = 40;\n            const escKey = 27;\n\n            if (keyCode !== upKey && keyCode !== downKey && keyCode !== escKey) {\n                return;\n            }\n\n            event.preventDefault();\n\n            if (keyCode === escKey && typeahead.childNodes.length !== 0) {\n                typeahead.style.display = 'none';\n                render.emptyQuerySuggestions();\n                return;\n            }\n\n            const suggestions = document.querySelectorAll('.typeahead__item');\n            let focusIndex = (getFocusIndex(suggestions) !== undefined) ? getFocusIndex(suggestions) : -1;\n\n            if (keyCode === downKey && focusIndex === -1 && typeahead.childNodes.length === 0 && inputElem.value) {\n                utilities.getSuggestions(inputElem.value).then(suggestions => {\n                    render.querySuggestions(suggestions);\n                });\n            }\n\n            // Don't do anything for upkey if we're focused on the input\n            if (focusIndex === -1 && keyCode === upKey) {\n                return;\n            }\n\n            // Stop focus from attempting to go more than size of suggestions\n            if (focusIndex >= suggestions.length-1 && keyCode === downKey) {\n                return false;\n            }\n\n            // Stop focus trying to go to negative numbers\n            if (focusIndex === 0 && keyCode === upKey) {\n                return false;\n            }\n\n            // Remove class from focused suggestion\n            if (focusIndex !== -1) {\n                suggestions[focusIndex].classList.remove('focused');\n            }\n\n            // Edit focus index according to direction of arrow keys\n            if (keyCode === downKey) {\n                focusIndex++;\n            }\n            if (keyCode === upKey) {\n                focusIndex--;\n            }\n\n            // Make sure next suggestion is in view, if not scroll into view\n            const suggestionRect = suggestions[focusIndex].getBoundingClientRect();\n            const containerRect = typeahead.getBoundingClientRect();\n            const bottomDiff = suggestionRect.bottom - containerRect.bottom;\n            const topDiff = suggestionRect.top - containerRect.top;\n            if (bottomDiff > 0) {\n                typeahead.scrollTop = typeahead.scrollTop + bottomDiff;\n            }\n            if (topDiff < 0) {\n                typeahead.scrollTop = typeahead.scrollTop + topDiff;\n            }\n\n            // Add focus class to next suggestion and update input value\n            suggestions[focusIndex].classList.add('focused');\n            inputElem.value = suggestions[focusIndex].textContent;\n        });\n\n        function getFocusIndex(suggestions) {\n            let response;\n            suggestions.forEach((suggestion, index) => {\n                if (suggestion.classList.contains('focused')) {\n                    response = index;\n                }\n            });\n            return response;\n        }\n    }\n\n    static searchFocus() {\n        searchElem.addEventListener('focusout', () => {\n            typeahead.style.display = 'none';\n            render.emptyQuerySuggestions();\n        });\n    }\n\n    static searchSubmit() {\n\n        searchElem.addEventListener('submit', event => {\n            const query = inputElem.value;\n            event.preventDefault();\n\n            if (typeahead.childNodes.length !== 0) {\n                typeahead.style.display = 'none';\n                render.emptyQuerySuggestions();\n            }\n\n            state.updateState({\n                type: 'UPDATE_QUERY',\n                value: query\n            });\n            state.updateState({\n                type: 'UPDATE_FILTER',\n                value: {id: \"\", name: \"\"}\n            });\n\n            if (!query) {\n                window.history.pushState(state.getState(), ``, location.pathname);\n                updateResults();\n                return;\n            }\n\n            window.history.pushState(state.getState(), ``, `?q=${query}`);\n            updateResults();\n        });\n    }\n\n    static searchChange() {\n        let inputTimer;\n\n        inputElem.addEventListener('input', event => {\n            if (!inputElem.value) {\n                return;\n            }\n\n            clearTimeout(inputTimer);\n            inputTimer = setTimeout(() => {\n                utilities.getSuggestions(inputElem.value).then(suggestions => {\n                    render.querySuggestions(suggestions);\n                });\n            }, 100)\n        })\n    }\n\n    static historyState() {\n        window.onpopstate = event => {\n            state.updateState({\n                type: 'UPDATE_QUERY',\n                value: event.state.query\n            });\n            state.updateState({\n                type: 'UPDATE_FILTER',\n                value: event.state.filter\n            });\n            state.updateState({\n                type: 'UPDATE_COUNT',\n                value: event.state.count\n            });\n            state.updateState({\n                type: 'UPDATE_AREA_COUNT',\n                value: event.state.areaCount\n            });\n            updateResults();\n        }\n    }\n}\n","/* Imports */\nimport bind from './bind';\nimport updateResults from './updateResults'\n\n/* Initialise application */\nfunction init() {\n    updateResults();\n    bind.typeaheadKeys();\n    bind.searchFocus();\n    bind.searchChange();\n    bind.searchSubmit();\n    bind.historyState();\n}\n\ninit();\n"],"names":["templates","children","currentState","state","getState","query","count","filter","id","filterName","name","wrapInContainer","areaCount","data","title","description","type","releaseDate","type_id","appElem","document","getElementById","typeahead","render","suggestions","emptyQuerySuggestions","innerHTML","join","style","display","firstChild","removeChild","areaResults","datasetResults","resultsData","HTMLParts","searchText","map","date","result","body","metadata","release_date","split","pop","push","Date","toLocaleDateString","day","month","year","datasetResultItem","areaSearchText","some","index","areaResultItem","utilities","hostname","queryString","location","search","queries","splice","returnValue","forEach","splitQuery","decodeURIComponent","e","error","fetch","apiUrl","then","response","json","total_results","results","getUrlParams","q","JSON","parse","stringify","action","newState","value","inputElem","updateResults","window","log","js","createElement","src","onload","onerror","head","appendChild","updateState","area_results","length","emptyResults","allResultsForAreaType","areaClick","areaHover","allResults","catch","searchElem","bind","areaTiles","slice","call","querySelectorAll","areaLinks","addEventListener","event","preventDefault","handleClick","link","target","closest","querySelector","getAttribute","history","pushState","handleHover","tile","cursor","handleHoverLeave","addHighlight","tileNode","classList","remove","add","icon","removeHighlight","keyCode","upKey","downKey","escKey","childNodes","focusIndex","getFocusIndex","undefined","getSuggestions","querySuggestions","suggestionRect","getBoundingClientRect","containerRect","bottomDiff","bottom","topDiff","top","scrollTop","textContent","suggestion","contains","pathname","inputTimer","setTimeout","onpopstate","init","typeaheadKeys","searchFocus","searchChange","searchSubmit","historyState"],"mappings":"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"}